Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

If you can't install or configure Docker, you can use the online docker setup to do the assignment.
Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground
Step2 Click on "continue" button on the left panel
Step3 Click on "launch.sh" button on the left panel
Step4 From the right panel use the top console to execute below command:-
		docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub
	Ans: docker pull <image>
	Example: docker pull nginx


3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
	Ans: docker images

4. Find out the "Full" ImageId of the image that you pulled and write it below.
	Ans: use command "docker inspect nginx" and you'll see the id of that image.
		fa5269854a5e615e51a72b17ad3fd1e01268f278a6684c8ed3c5f0cdce3f230b

5. Create a container of your image 
	Ans: docker create --name<container-name><image-name>


6. List all the running containers
	Ans: docker ps

7. List all the running and stopped containers
	Ans: docker ps -a

8. Find out the "Full" containerId of the container and write it below.
	Ans: use the command "docker inspect<container-name>" to get the id of the container
		96d612de491b5f67f1654946db6914c638e49ca1370ce8fb9d975fcac5aeb4a3

9. Find out how many image layers are used to build this image.
	Ans: docker inspect nginx
		Layers: "sha256:9c1b6dd6c1e6be9fdd2b1987783824670d3b0dd7ae8ad6f57dc3cea5739ac71e",
			"sha256:4b7fffa0f0a4a72b2f901c584c1d4ffb67cce7f033cc7969ee7713995c4d2610",
			"sha256:f5ab86d69014270bcf4d5ce819b9f5c882b35527924ffdd11fecf0fc0dde81a4",
			"sha256:c876aa251c80272eb01eec011d50650e1b8af494149696b80a606bbeccf03d68",
			"sha256:7046505147d7f3edbf7c50c02e697d5450a2eebe5119b62b7362b10662899d85",
			"sha256:b6812e8d56d65d296e21a639b786e7e793e8b969bd2b109fd172646ce5ebe951"
		

10. Get the Apache Tomcat 7 server image from the docker hub.
	Ans: docker pull tomcat:7.0.109-jdk8-adoptopenjdk-openj9

11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
	Ans: docker run -it -d --name <container-name><image-name> bash

12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
	Ans: 172.17.0.2

13. Which Port it is using?
	Ans: 8080/tcp

14. Try to access the Tomcat's home page from your machine/vm.
	Ans: docker run -it --rm -p 8888:8080 tomcat

15. What is the disk size of Apache Tomcat image?
	Ans: 0B(virtual 680MB)

16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
	Ans: 1. JAVA_HOME ----> shows the path of the JDK 11 (/usrlocal/openjdk-11)
	     2. CATALINA_HOME ----> shows the path of the tomcat...tomcat[appln.image]path--->(/usr/local/tomcat)

17. Find out which port is exposed for tomcat?
	Ans: docker inspect sanjay_tomcat(container-name)
		8080/tcp

18. Run multiple conntainers of tomcat on different port and access it's home page.
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
	Ans: docker pull ubuntu:xenial
	     docker pull ubuntu:bionic

20. Run the container of ubuntu in attached mode.
	Ans: docker run ubuntu:xenial

21. Run the container of another ubuntu in detached mode.
	Ans: docker run -d ubuntu:bionic

22. Check how many ubuntu containers are running and stopped
	Ans: both the ubuntu containers are stopped

23. Is the tomcat container running? If no, start one.
	Ans: docker start <container-name>

24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
	Ans: docker logs <container-name>

25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
	Ans: docker start <container-name>

26. Login as root user in ubuntu container
	Ans: docker exec -it <container-name> bash

27. Create a file with any name in root directory
	Ans: touch <filename with extension>

28. Install software of your choice in ubuntu container using "apt-get install"
	Ans: sudo apt-get install <image>

29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
	Ans: exit command

30. Check if the ubuntu container is running.
	Ans: docker ps (yes it is running).

31. Create a new ubuntu container out of the same image as that previous container in attached mode.
	Ans: docker create --name <new container-name><previous image>

32. Login as a root user
	Ans: docker exec -it <container-name> bash

33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
	Ans: Yes it is not available in the container 
	Kill Command: docker kill <container-name>

34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
	Ans: Yes the previous container is available.

35. Create an Image out of the existing container.
	Ans: docker commit <container-name><image>

36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
	

37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
	Ans: STOP COMMAND--> docker stop <container-name>
	     KILL COMMAND--> docker kill <container-name>

38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
	Ans: 

39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a ---->docker images -a -------> -a means all -----> shows all images.
2. -f ---->docker images -f -------> filters output based on conditions provided.
3. -q ---->docker images -q -------> it only shows the image IDs (quiet).

write atleast 1 command using each option above and prove their concepts as described in the --help.
	
40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a ---->docker ps -a ---> Shows all the containers(all).
2. -f ---->docker ps -f ---> Filters output based on conditions provided(Filter).
3. -q ---->docker ps -q ---> It only shows the Container IDs(quiet).
4. -n ---->docker ps -n ---> Show n last created containers(last int).
5. -l ---->docker ps -l ---> Shows the latest created container(Latest).
6. -s ---->docker ps -s ---> Shows the size of total file(size)
	

